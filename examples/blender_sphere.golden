0<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,0.0)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
1<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,0.12822827157509362)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
2<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,0.25645654315018723)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
3<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,0.38468481472528077)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
4<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,0.5129130863003745)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
5<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,0.641141357875468)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
6<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,0.7693696294505615)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
7<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,0.8975979010256552)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
8<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,1.025826172600749)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
9<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,1.1540544441758425)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
10<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,1.282282715750936)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
11<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,1.4105109873260298)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
12<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,1.538739258901123)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
13<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,1.6669675304762166)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
14<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,1.7951958020513104)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
15<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,1.9234240736264039)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
16<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,2.051652345201498)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
17<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,2.179880616776591)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
18<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,2.308108888351685)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
19<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,2.4363371599267785)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
20<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,2.564565431501872)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
21<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,2.6927937030769655)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
22<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,2.8210219746520595)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
23<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,2.949250246227153)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
24<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,3.077478517802246)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
25<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,3.20570678937734)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
26<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,3.333935060952433)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
27<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,3.4621633325275276)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
28<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,3.5903916041026207)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
29<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,3.7186198756777142)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
30<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,3.8468481472528078)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
31<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,3.9750764188279017)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
32<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,4.103304690402996)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
33<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,4.231532961978089)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
34<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,4.359761233553182)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
35<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,4.487989505128276)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
36<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,4.61621777670337)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
37<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,4.744446048278463)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
38<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,4.872674319853557)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
39<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,5.00090259142865)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
40<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,5.129130863003744)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
41<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,5.257359134578838)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
42<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,5.385587406153931)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
43<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,5.513815677729024)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
44<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,5.642043949304119)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
45<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,5.770272220879213)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
46<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,5.898500492454306)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
47<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,6.026728764029399)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
48<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,6.154957035604492)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
49<svg viewBox="-8.0 -4.5 16.0 9.0" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" preserveAspectRatio="none"><g stroke-width="0.05" transform="scale(1.0, -1.0)"><g><g fill="#000000" transform="translate(-8.0, -4.5)"><rect width="16.0" height="9.0" /></g><g transform="scale(1.0, -1.0)"><text font-size="2.0" text-anchor="middle">import osimport bpyorigin = bpy.data.objects[&#39;Cube&#39;]bpy.ops.object.select_all(action=&#39;DESELECT&#39;)origin.select_set(True)bpy.ops.object.delete()bpy.ops.mesh.primitive_uv_sphere_add(segments=100,ring_count=100)sphere = bpy.context.objectsphere.rotation_euler = (0,0,6.283185307179586)bpy.ops.object.shade_smooth()# bpy.data.materials.new(&#39;Prog mat&#39;)bpy.context.object.active_material = bpy.data.materials[&#39;Material&#39;]mat = bpy.context.object.active_materialimage_node = mat.node_tree.nodes.new(&#39;ShaderNodeTexImage&#39;)texture = mat.node_tree.nodes[&#39;Principled BSDF&#39;]texture.inputs[&#39;Roughness&#39;].default_value = 1mat.node_tree.links.new(image_node.outputs[&#39;Color&#39;], texture.inputs[&#39;Base Color&#39;])image_node.image = bpy.data.images.load(&#39;/home/lemmih/.cache/reanimate/-4184942114718038825.png&#39;)scn = bpy.context.scene#scn.render.engine = &#39;CYCLES&#39;scn.render.film_transparent = Truebpy.ops.render.render( write_still=True )</text></g></g></g></svg>
