# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  STACK_ROOT: $(Pipeline.Workspace)/.stack
  STACK_WORK: .stack-work

jobs:
 #- job: macOS
 #  pool:
 #   vmImage: 'macOS-10.13'
 #  steps:
 #  - script:  |
 #       mkdir -p ~/.local/bin
 #       export PATH=$HOME/.local/bin:$PATH
 #       curl --insecure -L https://get.haskellstack.org/stable/osx-x86_64.tar.gz | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
 #       stack build
#curl -o windows-x86_64-installer.exe https://get.haskellstack.org/stable/windows-x86_64-installer.exe
# ./windows-x86_64-installer.exe
 - job: windows
   pool:
     vmImage: 'windows-latest'
   steps:
    - bash: |
        export STACK_ROOT="$(Build.SourcesDirectory)"/.stack-root;
        curl -sSkL http://www.stackage.org/stack/windows-i386 -o /usr/bin/stack.zip
        unzip -o /usr/bin/stack.zip -d /usr/bin/
        stack --install-ghc $ARGS test --bench --only-dependencies
        stack $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
 # - job: linux
 #   pool:
 #    vmImage: 'ubuntu-latest'
 #   steps:
 #    #- task: CacheBeta@0
 #    #  inputs:
 #    #    key: stack | $(Agent.OS)
 #    #    path: $(HOME)/.local/bin
 #    #  displayName: Cache stack
 #    # - task: CacheBeta@0
 #    #   inputs:
 #    #     key: stack-root | $(Agent.OS) | stack.yaml | version2
 #    #     path: $(STACK_ROOT)
 #    #   displayName: Cache stack root
 #    # - task: CacheBeta@0
 #    #   inputs:
 #    #     key: stack-work | $(Agent.OS) | stack.yaml | version4
 #    #     path: $(Build.SourcesDirectory)/$(STACK_WORK)
 #    #   displayName: Cache stack work
 #    - script: |
 #        mkdir -p ~/.local/bin
 #        export PATH=$HOME/.local/bin:$PATH
 #        curl -L https://get.haskellstack.org/stable/linux-x86_64.tar.gz | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
 #        stack build
 #      displayName: 'Build reanimate'
