jobs:
- job: ${{ parameters.name }}
  variables:
    STACK_ROOT: $(Build.SourcesDirectory)/.stack-root
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      stack:
        BUILD: stack
        STACK_YAML: stack.yaml
        ARGS: --pedantic
      stack-lts-14:
        BUILD: stack
        STACK_YAML: stack-lts-14.yaml
      stack-lts-13:
        BUILD: stack
        STACK_YAML: stack-lts-13.yaml
    maxParallel: 6
  steps:
  - task: Cache@2
    inputs:
      key: ${{ parameters.name }} | ${{ parameters.vmImage }} | $(STACK_YAML) | stack-root | $(Agent.OS)
      path: $(STACK_ROOT)
      cacheHitVar: CACHE_RESTORED
    displayName: Cache stack root
  - bash: |
      curl -sSkL https://icl.cs.utk.edu/lapack-for-windows/libraries/VisualStudio/3.7.0/Dynamic-MINGW/Win64/libblas.dll -o libblas.dll
      curl -sSkL https://icl.cs.utk.edu/lapack-for-windows/libraries/VisualStudio/3.7.0/Dynamic-MINGW/Win64/libblas.lib -o libblas.lib
      curl -sSkL https://icl.cs.utk.edu/lapack-for-windows/libraries/VisualStudio/3.7.0/Dynamic-MINGW/Win64/liblapack.dll -o liblapack.dll
      curl -sSkL https://icl.cs.utk.edu/lapack-for-windows/libraries/VisualStudio/3.7.0/Dynamic-MINGW/Win64/liblapack.lib -o liblapack.lib
      cp libblas.dll libblas.lib liblapack.dll liblapack.lib /usr/lib/
      curl -sSkL http://www.stackage.org/stack/windows-x86_64 -o /usr/bin/stack.zip
      unzip -o /usr/bin/stack.zip -d /usr/bin/
      stack --install-ghc test $ARGS --flag reanimate:test --only-dependencies
      stack ./examples/counter.hs check
      stack test --flag reanimate:test
    env:
      OS_NAME: ${{ parameters.os }}
    displayName: 'Installation ${{parameters.os}} & Test'
