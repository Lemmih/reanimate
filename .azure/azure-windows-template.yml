jobs:
- job: ${{ parameters.name }}
  variables:
    STACK_ROOT: $(Build.SourcesDirectory)/.stack-root
    MIKTEX_REPO: $(Build.SourcesDirectory)/miktex_packages
    MIKTEX_INSTALL: $(Build.SourcesDirectory)/MikTex
  pool:
    vmImage: ${{ parameters.vmImage }}
  strategy:
    matrix:
      #stack:
      #  BUILD: stack
      #  STACK_YAML: stack.yaml
      #stack-lts-12:
      #  BUILD: stack
      #  STACK_YAML: stack-lts-12.yaml
      stack-lts-11:
        BUILD: stack
        STACK_YAML: stack-lts-11.yaml
    maxParallel: 6
  steps:
  #- task: CacheBeta@0
  #  inputs:
  #    key: ${{ parameters.name }} | ${{ parameters.vmImage }} | $(STACK_YAML) | stack-root | $(Agent.OS)
  #    path: $(STACK_ROOT)
  #    cacheHitVar: CACHE_RESTORED
  #  displayName: Cache stack root
  - task: CacheBeta@0
    inputs:
      key: $(Agent.OS) | miktex
      path: $(MIKTEX_REPO)
    displayName: Cache miktex
  - task: CacheBeta@0
    inputs:
      key: $(Agent.OS) | miktex_bins | version4
      path: $(MIKTEX_INSTALL)
      cacheHitVar: MIKTEX_RESTORED
    displayName: Cache miktex installation
  - bash: |
      curl -sSkL https://miktex.org/download/win/miktexsetup-x64.zip -o miktexsetup-x64.zip
      unzip miktexsetup-x64.zip
      ./miktexsetup.exe --local-package-repository=$MIKTEX_REPO --package-set=complete download
      ./miktexsetup.exe --verbose --local-package-repository=$MIKTEX_REPO \
          --shared=no \
          --user-config="$(MIKTEX_INSTALL)/user/" --user-data="$(MIKTEX_INSTALL)/user/" \
          --common-config="$(MIKTEX_INSTALL)/config/" \
          --common-data="$(MIKTEX_INSTALL)/config/" \
          --common-install="$(MIKTEX_INSTALL)/install" \
          --remote-package-repository=http://muug.ca/mirror/ctan/systems/win32/miktex/tm/packages/ \
          --package-set=complete \
          --user-install="MiKTeX\2.9" install
    condition: eq(variables['MIKTEX_RESTORED'], 'false')
    displayName: Install MikTex
  #- bash: |
  #      echo REMOVE ME ONCE THIS IS FIXED https://github.com/microsoft/azure-pipelines-tasks/issues/10841
  #      cd "$(STACK_ROOT)"
  #      if [ -f "executable.txt" ]; then chmod +x $(cat executable.txt); fi
  #  condition: and(succeeded(), ne(variables['CACHE_RESTORED'], 'false'))
  - bash: |
      set -x
      #export STACK_ROOT="$(Build.SourcesDirectory)"/.stack-root;
      #curl -sSkL https://ffmpeg.zeranoe.com/builds/win64/static/ffmpeg-4.2.1-win64-static.zip -o ffmpeg.zip
      #unzip ffmpeg.zip
      #cp ffmpeg-4.2.1-win64-static/bin/* /usr/bin/

      #curl -sSkL http://mirror.ctan.org/systems/texlive/tlnet/install-tl-windows.exe -o install-tl-windows.exe
      #./install-tl-windows.exe -gui text

      #curl -sSkL https://miktex.org/download/win/miktexsetup-x64.zip -o miktexsetup-x64.zip
      #unzip miktexsetup-x64.zip
      #./miktexsetup.exe --local-package-repository=$MIKTEX_REPO --package-set=complete download
      #./miktexsetup.exe --verbose --local-package-repository=$MIKTEX_REPO \
      #    --shared=no --user-config="MiKTeX\2.9" --user-data="MiKTeX\2.9" \
      #    --remote-package-repository=http://muug.ca/mirror/ctan/systems/win32/miktex/tm/packages/ \
      #    --user-install="MiKTeX\2.9" --modify-path install

      ls -l $MIKTEX_INSTALL/install/miktex/bin/x64/latex.exe
      export PATH=$MIKTEX_INSTALL/install/miktex/bin/x64:$PATH

      latex -version
      latex.exe -version
      $MIKTEX_INSTALL/install/miktex/bin/x64/latex.exe -version
      latex -interaction=nonstopmode test.tex
      cat MiKTeX/2.9/miktex/log/initexmf.log
      cat $(MIKTEX_INSTALL)/user/miktex/log/initexmf.log
      echo OK

      #curl -sSkL http://www.stackage.org/stack/windows-x86_64 -o /usr/bin/stack.zip
      #unzip -o /usr/bin/stack.zip -d /usr/bin/
      #stack --install-ghc $ARGS test --only-dependencies
      #stack ./examples/counter.hs check
      #stack $ARGS test --pedantic
    env:
      OS_NAME: ${{ parameters.os }}
    displayName: 'Installation ${{parameters.os}} & Test'
  - bash: |
        echo REMOVE ME ONCE THIS IS FIXED https://github.com/microsoft/azure-pipelines-tasks/issues/10841
        cd "$(STACK_ROOT)"
        rm executable.txt
        find . -perm +111 >> executable.txt
        find . -executable >> executable.txt
        cat executable.txt
    displayName: Save list of files with executable bit set
